

library(shiny)
library(shinydashboard)
library(epiR)
library(shinythemes)
library(shinyjs)


#J:/4-MÃ©thodologiste/Antoine/logo-chu-poitiers_numerique.png



#########################################################################################################################
###################################################   UI  ###############################################################
#########################################################################################################################

ui <- fluidPage(
  useShinyjs(),
  shinythemes::themeSelector(),
  fluidRow(style = "height:100px",
           column(width = 3,
                  style = "height:100%",
                  tags$img(src = "logo-Horizontal-CHU-poitiers_Couleurs.png",
                    style = 'height: 100%')),
           column(width = 9,
                  style="height: 100%",
                  includeHTML("appName.html"))
           ),
  fluidRow(
  navbarPage(title = icon("users",class ="fa-solid fa-users"),
             id = "hypMenu",
             tabPanel(title = "READ ME",
                      id = "RM",
                      includeHTML("ReadMe.html")),
             tabPanel(title = "CALCULATOR",
                      id = "C",
             tabsetPanel(

# PAGE COMPARING PROPORTIONS --------------------------------------------------------------------------------------------
             tabPanel(title = "COMPARING PROPORTIONS",
                      id = "CP",
                      fluidRow(column(width = 12,
                                      h3("COMPARING PROPORTIONS :"),
                                      p("Evaluation of treatment effect based on discrete 
                                      clinical endpoint, the proportions of events that have 
                                      occurred between treatment groups are compared."))),
                      br(),
                      sidebarLayout(
                        sidebarPanel(
                          selectInput(inputId = "hypProp",
                                      label = "Hypothesis",
                                      choices = c(" ","superiority", "non-inferiority")),
                          #when an item is selected, the next appear
                          numericInput(inputId = "powerProp",
                                       label = "Power (%)",
                                       value = NULL,
                                       max = 100,
                                       min = 0),
                          numericInput(inputId = "alphaProp",
                                       label = "Alpha (%)",
                                       value = NULL,
                                       max = 20,
                                       min = 0,
                                       step = 0.5),
                          conditionalPanel(
                            condition = "input.hypProp == 'superiority' || input.hypProp == 'non-inferiority'",
                            h5("Define in % the proportion expected in the control group :"),
                            numericInput(inputId = "obsProp",
                                         label = "Control (%)",
                                         value = NULL,
                                         step = 0.005)),
                          conditionalPanel(
                            condition = "input.hypProp == 'superiority'",
                            h5("Define in % the proportion expected in the experimental group :"),
                            numericInput(inputId = "prevProp",
                                         label = "Experimental (%)",
                                         value = NULL,
                                         step = 0.005),
                            selectInput(inputId = "sidetestProp",
                                        label = "test",
                                        choices = c("two-sided", "one-sided"))),
                          conditionalPanel(
                            condition = "input.hypProp == 'non-inferiority'",
                            h5("Define the absolute margin :"),
                            numericInput(inputId = "deltaProp",
                                         label = "Delta",
                                         value = NULL,
                                         step = 0,005))
                          ),
                        mainPanel(
                          actionButton(inputId = "Prop", label =  "Results"),
                          br(),
                          htmlOutput("proportion"))
                        ) # sidebarLayout
                      ), # Comparing proportion


# PAGE COMPARING MEANS --------------------------------------------------------------------------------------------------

             tabPanel(title = "COMPARING MEANS",
                      id = "CM",
                      fluidRow(column(width = 12,
                                      h3("COMPARING MEANS"),
                                      p("Evaluation of the effect within a given treatment, the 
                                      null hypothesis of interest is to test whether there is a 
                                      significant difference in mean change from baseline to endpoint."))),
                      br(),
                      sidebarLayout(
                        sidebarPanel(
                          selectInput(inputId = "hypMean",
                                      label = "Hypothesis",
                                      choices = c(" ","superiority", "non-inferiority")), 
                          #when an item is selected, the next appear
                          numericInput(inputId = "powerMean",
                                       label = "Power (%)",
                                       value = NULL,
                                       max = 100,
                                       min = 0),
                          numericInput(inputId = "alphaMean",
                                       label = "Alpha (%)",
                                       value = NULL,
                                       max = 20,
                                       min = 0,
                                       step = 0.5),
                          conditionalPanel(
                            condition = "input.hypMean == 'superiority' || input.hypMean == 'non-inferiority'",
                            h5("Define the mean expected in the control group :"),
                            numericInput(inputId = "obsMean",
                                         label = "Control",
                                         value = NULL,
                                         step = 0.005)),
                          conditionalPanel(
                            condition = "input.hypMean == 'superiority'",
                            h5("Define the mean expected in the experimental group :"),
                            numericInput(inputId = "prevMean",
                                         label = "Experimental",
                                         value = NULL,
                                         step = 0.005),
                            selectInput(inputId = "sidetestMean",
                                        label = "test",
                                        choices = c("two-sided", "one-sided"))),
                          numericInput(inputId = "sigmaMean",
                                       label = "Sigma",
                                       value = NULL,
                                       step = 0.005),
                          conditionalPanel(
                            condition = "input.hypMean == 'non-inferiority'",
                            h5("Define the absolute margin :"),
                            numericInput(inputId = "deltaMean",
                                         label = "Delta",
                                         value = NULL,
                                         step = 0,005))
                          ), # sidebar panel
                        mainPanel(
                          actionButton("Mean", "Results"),
                                  br(),
                                  htmlOutput("mean"))
                        ) # sidebarLayout
                      ) # Comparing means
          ) # Page 
)# fluidRow
  ) # Page
)
)




#########################################################################################################################
#################################################   SERVER   ############################################################
#########################################################################################################################

server <- function(input, output) {
  
  # convert to numeric value -------------------------
  # "one-sided" <- 1
  # "tow-sided" <- 2
  stMean <- reactive( if (reactive(input$sidetestMean)()=="one-sided") 1 else 2 )
  
  stProp <- reactive( if (reactive(input$sidetestProp)()=="one-sided") 1 else 2 )

  
  # sample size result of the computation -------------------------
  resMean <- eventReactive(input$Mean,{
    if(reactive(input$hypMean)()=='superiority')
      epi.sscompc(N = NA, treat = input$prevMean, control = input$obsMean, 
                  sigma = input$sigmaMean, n = NA, power = input$powerMean/100, 
                  r = 1, design = 1, sided.test = stMean(), conf.level = 1-(input$alphaMean/100))$n.treat
    else
      epi.ssninfc(treat = input$obsMean, control = input$obsMean, sigma = input$sigmaMean, 
                  delta = input$deltaMean, n = NA, power = input$powerMean/100, alpha = input$alphaMean/100, r = 1)$n.treat
      })
    
      
  
  resProp <- eventReactive(input$Prop,{
    if(reactive(input$hypProp)()=='superiority')
      epi.sscohortc(N = NA, irexp1 = input$prevProp/100, irexp0 = input$obsProp/100, pexp = NA, n = NA, 
                    power = input$powerProp/100, r = 1, design = 1, sided.test = stProp(), 
                    finite.correction = FALSE, nfractional = FALSE, conf.level = 1-(input$alphaProp/100))$n.exp1
    else
      epi.ssninfb(treat = input$obsProp/100, control = input$obsProp/100, delta = input$deltaProp/100, 
                  n = NA, r = 1, power = input$powerProp/100, alpha = input$alphaProp/100)$n.treat
    })
  
  
  # reactive example sentence -------------------------
  a <- eventReactive(input$Mean,{
    if(reactive(input$hypMean)()=='superiority')
    paste0("This sample size is for a randomised controlled superiority trial in two parallel groups 
           experimental treatment versus control treatment with balanced randomisation (ratio 1 :1) for a binary 
           endpoint. The mean of the criteria is ",input$prevMean," with experimental treatment compared to
           ",input$obsMean," with control treatment. In order to highlight this absolute erence of 
           ",abs(input$prevMean-input$obsMean),", with a standard deviation of ",input$sigmaMean,", with a "
           ,input$sidetestMean," alpha risk of ",input$alphaMean,"% and a power of ",input$powerMean,"%.")
    else
      paste0("This sample size for a randomised controlled non-inferiority trial in two parallel groups experimental 
             treatment versus control treatment with balanced randomisation (ratio 1 :1) for a binary endpoint. 
             The mean of the criteria is ",input$obsMean," with treatment A. Assuming an absolute non-inferiority margin 
             of ",input$deltaMean,", with a standard deviation of ",input$sigmaMean,", with a one-sided alpha risk of "
             ,input$alphaMean,"% and a power of ",input$powerMean,"%.")
      
      })
  
  b <- eventReactive(input$Prop,{
    if(reactive(input$hypProp)()=='superiority')
    paste0("This sample size is for a randomised controlled superiority trial in two parallel groups experimental 
           treatment versus control treatment with balanced randomisation (ratio 1 :1) for a binary endpoint. The 
           proportion of patient with the criteria is ",input$prevProp,"% with experimental treatment compared to 
           ",input$obsProp,"% with control treatment. In order to highlight this absolute difference of 
           ",abs(input$prevProp-input$obsProp),"%, with a ",input$sidedtestProp," alpha risk of ",input$alphaProp,"% and 
           a power of ",input$powerProp,"%.")
    else
      paste0("This sample size for a randomised controlled non-inferiority trial in two parallel groups experimental 
             treatment versus control treatment with balanced randomisation (ratio 1 :1) for a binary endpoint. 
             The proportion of patients with the criteria is ",input$prevProp,"% with the control treatment. Assuming an 
             absolute non-inferiority margin of ",input$deltaProp,"%, with a one-sided alpha risk of 5% and a power 
             of ",input$powerProp,"%.")
      })
  
  
  # display the result -------------------------
  output$mean <- renderText(paste("The needed sample size is <b>",resMean(), "</b> patients in each group. ", a()))
  output$proportion <- renderText(paste0("The needed sample size is <b>",resProp(), "</b> patients in each group. ", b()))
  
}

# Run the application
shinyApp(ui = ui, server = server)
