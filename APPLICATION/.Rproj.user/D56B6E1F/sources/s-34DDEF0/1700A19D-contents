library("epiR")
library("gsDesign")
library("kableExtra")
library("rpact")

power <- 0.8
alpha <- 0.05
p1 <- 0.15*0.75
p2 <- 0.15

###############################
# Pas d'analyse intermÃ©diaire #
###############################

epi.sscohortc(N = NA, irexp1 = p1, irexp0 = p2, pexp = NA, n = NA, 
              power = power, r = 1, design = 1, sided.test = 2, 
              finite.correction = FALSE, nfractional = FALSE, conf.level = 1-alpha) # 2544 (total)

#2544

 gs <- gsDesign(k = 3, test.type = 2, n.fix =  2544, sfu="OF", beta = 1-power, alpha = alpha) # 2589 
 print( gs)

design <- getDesignGroupSequential(typeOfDesign = "OF", 
                informationRates = c(1/3, 2/3, 1), alpha = alpha, beta = 1-power, sided = 2)

designPlan <- getSampleSizeRates(design, riskRatio = FALSE, thetaH0 = 0,
                   normalApproximation = TRUE, pi1 = p1, pi2 = p2, groups = 2,
                   allocationRatioPlanned = 1)

summary(designPlan) # 2588

epi.sscohortc(N = NA, irexp1 = p1, irexp0 = p2, pexp = NA, n = NA, 
              power = power, r = 1, design = 1, sided.test = 2, 
              finite.correction = FALSE, nfractional = FALSE, conf.level = 1-0.0451) # 2624 (total)

design <- getDesignGroupSequential(typeOfDesign = "OF",
                                   informationRates = c(1/2, 1), alpha = alpha, beta = 1-power, sided = 2)

designPlan <- getSampleSizeRates(design, riskRatio = FALSE, thetaH0 = 0,
                                 normalApproximation = TRUE, pi1 = p1, pi2 = p2, groups = 2,
                                 allocationRatioPlanned = 1)

summary(designPlan) # 2564


##########################
## Exemple Camille CPP  ##
##########################


epi.sscompc(N = NA, treat = 36, control = 36+2.09, 
            sigma = 3.57, n = NA, power = 0.8, 
            r = 1, design = 1, sided.test = 2, conf.level = 0.95) # 92

gsDesign(k = 2, test.type = 2, n.fix =  92, beta=1-power, alpha = alpha) # 2589 

design <- getDesignGroupSequential(typeOfDesign = "asHSD", gammaA = 4,
                                   informationRates = c(1/2, 1), alpha = alpha, beta = 1-power, sided = 2)

designPlan <- getSampleSizeMeans(design, meanRatio = FALSE, thetaH0 = 0,
                                 normalApproximation = TRUE, alternative = 2.09, stDev = 3.57, groups = 2,
                                 allocationRatioPlanned = 1)

summary(designPlan) 



design <- getDesignGroupSequential(typeOfDesign = "asHSD", gammaA = -4,
                                   informationRates = c(1/2, 1), alpha = alpha, beta = 1-power, sided = 2)


designPlan <- getSampleSizeMeans(design, meanRatio = FALSE, thetaH0 = 0,
                                 normalApproximation = TRUE, alternative = 2.09, stDev = 3.57, groups = 2,
                                 allocationRatioPlanned = 1)

summary(designPlan) 
