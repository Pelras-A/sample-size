

library(shiny)
library(shinydashboard)
library(DT)
library(shinyjs)


load(url("https://gitlab.com/v.bonnemains/utility-prediction/-/raw/main/Kidney_transplantation/regression%20models.RData"))
source("https://gitlab.com/v.bonnemains/utility-prediction/-/raw/main/Kidney_transplantation/utility%20prediction.R")

ui <- dashboardPage(
  dashboardHeader(disable = TRUE),
  dashboardSidebar(title =
    p(a(tags$img(src='SPHERElogo.jpeg', width=230,align = "center"),
        target="_blank", href="https://sphere-inserm.fr", class="hidden-xs"),
      style="padding-left:0px !important"),
    sidebarMenu(tags$style(".main-header {max-height: -100px}"),
                menuItem("ReadMe", tabName = "one"),
                menuItem("Calculator", tabName = "two"),
                menuItem("About us", tabName = "three")
    )
  ),
  dashboardBody(
    tabItems(
      tabItem(tabName = "one",
              includeHTML("https://gitlab.com/v.bonnemains/utility-prediction/-/raw/main/Kidney_transplantation/appName.html"),
              includeHTML("https://gitlab.com/v.bonnemains/utility-prediction/-/raw/main/Kidney_transplantation/ReadMe.html"),
              tags$img(src='figure readme.png', width="100%",align = "left"),
              fluidRow(style = "background-color:#ffffff")),
      
      tabItem(tabName = "two",
              title = "APPLICATION",
              includeHTML("https://gitlab.com/v.bonnemains/utility-prediction/-/raw/main/Kidney_transplantation/appName.html"),
              
              tabsetPanel(id = "result",
                          useShinyjs(),
                          fluidRow(tabBox(width = "100%",
                                          tabPanel("Import table",
                                                   fileInput("file1", "Select CSV file",
                                                             accept = c("text/csv",
                                                                        "text/comma-separated-values",
                                                                        ".csv")),
                                                   DT::dataTableOutput("sample_table")),
                                          tabPanel("LME",
                                                   fluidRow(tabBox(width = "100%",p("These predictions were performed using a linear mixed model, i.e., 
                                                                                    the best calibrated model in the study supporting this online calculator."))),
                                                   DT::dataTableOutput("res1_table"),
                                                   fluidRow(style = "height:50px;width:100%;background-color:#ffffff"),
                                                   fluidRow(column(12,downloadButton("csv1","Download in CSV", class = "pull-right")))),
                                          
                                          tabPanel("Two-part beta",
                                                   fluidRow(tabBox(width = "100%", p("These predictions were performedd unsing a two-part beta mixed model, i.e.,
                                                                                     the most perccise model in the study supporting this online calculator.
                                                                                     However, this model was reported to underestimate high utility scores and
                                                                                     overestimatelow ones. This model would result in biased estimations, should 
                                                                                     it be applied to populations at either side of the scale."))),
                                                   DT::dataTableOutput("res2_table"),
                                                   fluidRow(style = "height:50px;width:100%;background-color:#ffffff"),
                                                   fluidRow(column(12,downloadButton("csv2","Download in CSV", class = "pull-right"))))
                          )))
      ),
      tabItem(tabName = "three",
              fluidPage(
                tabBox(
                  width = 12,
                  fluidRow(column(width = 2,
                           p(a(tags$img(src='Portrait-Vincent-BONNEMAINS.png',width = "100%",align = "left")))),
                           column(width = 10,
                                p(a("Vincent Bonnemains", href="https://sphere-inserm.fr/en/member/vincent-bonnemains", target="_blank"),style = "font-size:20px"),
                                p("PhD student",style = "font-size:15px"),
                                p("INSERM UMR 1246 - SPHERE, Nantes University, France",style = "font-size:15px"),
                                p("e-mail: vincent.bonnemains@univ-nantes.fr",style = "font-size:15px")
                                )
                )),
                tabBox(
                  width = 12,
                  fluidRow(column(width = 2,
                          p(a(tags$img(src='Portrait-Etienne-DANTAN.png', width="100%",align = "left")))),
                           column(width = 10,
                           p(a("Etienne Dantan", href="https://sphere-inserm.fr/en/member/etienne-dantan", target="_blank"),style = "font-size:20px"),
                           p("Associate Professor",style = "font-size:15px"),
                           p("INSERM UMR 1246 - SPHERE, Nantes University, France",style = "font-size:15px"),
                           p("e-mail: etienne.dantan@univ-nantes.fr",style = "font-size:15px"))
                )),
                fluidRow(p("Application developped by ",a("Antoine PELRAS", href = "hhtps://github.com/Pelras-A"), ", engineer of ",a(tags$img(src='Logo Horizontal-CHU Poitiers_Couleurs.png', height="50px"), href = "https://www.chu-poitiers.fr")), style = "align:left")
              )
      )
    )
  )
)



server <- function(input, output) {
  
  
  dataset <- reactive({
    inFile <- input$file1
    
    #telechargement sous condition de selection du fichier
    if (is.null(inFile))
      return(NULL)
    df <- read.csv(inFile$datapath, header = TRUE,sep = ";")
    #comma to dots (decimal) + character to numeric
    df <- mutate_all(df, function(x) as.numeric(gsub(",", ".",x)))
    return(df)
  })
  
  
  #afficher tables
  output$sample_table <- DT::renderDataTable({
    df <- dataset()
    DT::datatable(df,options = list(searching = FALSE,pageLength = 10, scrollX = T))
  })
  
  output$res1_table <- DT::renderDataTable({
    DT::datatable(predict.lme(dataset()),options = list(searching = FALSE,pageLength = 10, scrollX = T))
  })
  output$res2_table <- DT::renderDataTable({
    DT::datatable(predict.2part_beta(dataset()),options = list(searching = FALSE,pageLength = 10, scrollX = T))
  })
  
  output$csv1 <- downloadHandler(
    filename = "lme.csv",
    content = function(file){
      write.csv(predict.lme(dataset()), file, row.names = FALSE)
    })
  output$csv2 <- downloadHandler(
    filename = "2part_beta.csv",
    content = function(file){
      write.csv(predict.2part_beta(dataset()), file, row.names = FALSE)
    })
  
}

# Run the application
shinyApp(ui = ui, server = server)

