

library(shiny)
library(shinydashboard)
library(DT)
library(shinyjs)
library(dplyr)


load("regression models.RData")
source("utility prediction.R")

ui <- dashboardPage(
  dashboardHeader(disable = TRUE),
  dashboardSidebar(title =
    p(a(tags$img(src='SPHERElogo.jpeg', width=230,align = "center"),
        target="_blank", href="https://sphere-inserm.fr", class="hidden-xs"),
      style="padding-left:0px !important"),
    sidebarMenu(tags$style(".main-header {max-height: -100px}"),
                menuItem("ReadMe", tabName = "one"),
                menuItem("Calculator", tabName = "two"),
                menuItem("About us", tabName = "three")
    )
  ),
  dashboardBody(
    tabItems(
      tabItem(tabName = "one",
              includeHTML("appName.html"),
              fluidRow(p(),style = "height:40px"),
              includeHTML("ReadMe.html"),
              tags$img(src='figure readme.png', width="100%",align = "left"),
              fluidRow(style = "background-color:#ffffff"),
              hr(),
              hr(),
              fluidRow(
                column(3,
                       align = "center",
                       a(tags$img(src='Inserm.png', width ="70%"), href = "https://www.inserm.fr/")),
                column(3,
                       align = "center",
                       a(tags$img(src='Nantes-U.png', width ="75%"), href = "https://www.univ-nantes.fr/")),
                column(3,
                       align = "center",
                       a(tags$img(src='Poitiers-U.svg', width ="55%"), href = "https://www.univ-poitiers.fr/")),
                column(3,
                       align = "center",
                       a(tags$img(src='Logo-Horizontal-CHU-Poitiers_Couleurs.png', width ="65%"), href = "https://www.chu-poitiers.fr"))
              )),
      
      tabItem(tabName = "two",
              includeHTML("appName.html"),
              tabsetPanel(id = "resuslt",
                          useShinyjs(),
                          fluidRow(
                            style = "background-color:#ffffff",
                            column(
                              width = 3,
                              fileInput("file1",
                                        label = "Select CSV file",
                                        accept = c("text/csv",
                                                   "text/comma-separated-values",
                                                   ".csv"))),
                            column(
                              width = 3,
                              selectInput(
                                inputId = "model",
                                label = "Select model",
                                choices = c("LME", "Two-part beta"))),
                            column(
                              width = 3,
                              numericInput(
                                inputId = "horizon",
                                label = "Select horizon in days",
                                value = 7,
                                step = 1,
                                min = 1,
                                max = 36500)),
                            column(
                              width = 3,
                              numericInput(
                                inputId = "step",
                                label = "Select step in days",
                                value = 1,
                                step = 1,
                                min = 1,
                                max = 3650))
                            ),
                          fluidRow(
                            style = "background-color:#ffffff",
                            conditionalPanel(
                              condition = "input.model=='LME'",
                              DT::dataTableOutput("res1_table"),
                              column(12,uiOutput("download1")),
                              hr()
                              )
                            ),
                          fluidRow(
                            style = "background-color:#ffffff",
                            conditionalPanel(
                              condition = "input.model=='Two-part beta'",
                              DT::dataTableOutput("res2_table"),
                              column(12,uiOutput("download2")),
                              hr()
                            )
                          )
                          ),
              
              
                          
      ),
      tabItem(tabName = "three",
              fluidPage(
                tabBox(
                  width = 12,
                  fluidRow(column(width = 1,
                           p(a(tags$img(src='Portrait-Vincent-BONNEMAINS.png',width = "100%",align = "left")))),
                           column(width = 11,
                                p(a("Vincent Bonnemains", href="https://sphere-inserm.fr/en/member/vincent-bonnemains", target="_blank"),style = "font-size:20px"),
                                p("PhD student",style = "font-size:15px"),
                                p("INSERM UMR 1246 - SPHERE, Nantes University, France",style = "font-size:15px"),
                                p("e-mail: vincent.bonnemains@univ-nantes.fr",style = "font-size:15px")
                                )
                )),
                tabBox(
                  width = 12,
                  fluidRow(column(width = 1,
                          p(a(tags$img(src='Portrait-Etienne-DANTAN.png', width="100%",align = "left")))),
                           column(width = 11,
                           p(a("Etienne Dantan", href="https://sphere-inserm.fr/en/member/etienne-dantan", target="_blank"),style = "font-size:20px"),
                           p("Associate Professor",style = "font-size:15px"),
                           p("INSERM UMR 1246 - SPHERE, Nantes University, France",style = "font-size:15px"),
                           p("e-mail: etienne.dantan@univ-nantes.fr",style = "font-size:15px"))
                )),
                tabBox(
                  width = 12,
                  fluidRow(column(width = 1,
                                  p(a(tags$img(src='pilote-de-ligne.jpg', width="100%",align = "left")))),
                           column(width = 11,
                                  p("Yohann Foucher", href="https://sphere-inserm.fr/en/member/etienne-dantan", target="_blank",style = "font-size:20px"),
                                  p("SpÃ©cialiste en atterrissage",style = "font-size:15px"),
                                  p("INSERM, CIC-1402, Centre Hospitalier Universitaire de Poitiers, France.",style = "font-size:15px"),
                                  p("e-mail: yohann.foucher@univ-poitiers.fr",style = "font-size:15px"))
                  )),
                fluidRow("Application developped by ",a("Antoine PELRAS", href = "hhtps://github.com/Pelras-A")),
                hr(),
                hr(),
                fluidRow(
                  column(3,
                         align = "center",
                         a(tags$img(src='Inserm.png', width ="70%"), href = "https://www.inserm.fr/")),
                  column(3,
                         align = "center",
                         a(tags$img(src='Nantes-U.png', width ="75%"), href = "https://www.univ-nantes.fr/")),
                  column(3,
                         align = "center",
                         a(tags$img(src='Poitiers-U.svg', width ="55%"), href = "https://www.univ-poitiers.fr/")),
                  column(3,
                         align = "center",
                         a(tags$img(src='Logo-Horizontal-CHU-Poitiers_Couleurs.png', width ="65%"), href = "https://www.chu-poitiers.fr"))
                )
              )
      )
    )
  )
)



server <- function(input, output) {
  
  dataset1 <- reactive({
    inFile <- input$file1
    
    #telechargement sous condition de selection du fichier
    if (is.null(inFile))
      return(NULL)
    df <- read.csv(inFile$datapath, header = TRUE,sep = ";")
    #comma to dots (decimal) + character to numeric
    # df <- mutate_all(df, function(x) as.numeric(gsub(",", ".",x)))
    return(df)
  })
  
  dataset <- reactive({
    df <- dataset1()
    s <- seq(from = 0, to = input$horizon, by = input$step)
    df <- df[rep(1:nrow(df), each = length(s)),]
    df$time <- rep(s,length(dataset1()[,1]))
    
    return(df)
  })
  
  
  #afficher tables
  output$sample_table <- DT::renderDataTable({
    df <- dataset()
    DT::datatable(df,options = list(searching = FALSE,pageLength = 10, scrollX = T))
  })

  output$res1_table <- DT::renderDataTable({
    df <- DT::datatable(predict.lme(dataset())[,c("id","preds.lme","BMI.30sup", "CV.history", "age", "Tdial", "sex.M", "diab.history", "time")],options = list(searching = FALSE,pageLength = 10, scrollX = T))
    return(formatStyle(df, columns = "preds.lme", color = "blue"))
    })
  output$res2_table <- DT::renderDataTable({
    df <- DT::datatable(predict.2part_beta(dataset())[,c("id","preds.2part_beta","BMI.30sup", "CV.history", "age", "Tdial", "sex.M", "diab.history", "time")],options = list(searching = FALSE,pageLength = 10, scrollX = T))
    return(formatStyle(df, columns = "preds.2part_beta", color = "blue"))
    })
  
  output$csv1 <- downloadHandler(
    filename = "lme.csv",
    content = function(file){
      write.csv(predict.lme(dataset()), file, row.names = FALSE)
    })
  output$csv2 <- downloadHandler(
    filename = "2part_beta.csv",
    content = function(file){
      write.csv(predict.2part_beta(dataset()), file, row.names = FALSE)
    })
 
  #afficher les boutons download
  output$download1 <- renderUI(
    if(!is.null(input$file1)){
      downloadButton("csv1", "Download in CSV", class = "pull-right")
      }
    )
  output$download2 <- renderUI(
    if(!is.null(input$file1)){
      downloadButton("csv2", "Download in CSV", class = "pull-right")
    }
  )
   
}

# Run the application
shinyApp(ui = ui, server = server)

