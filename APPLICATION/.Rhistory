shiny::runApp()
1/30
0.1*30
library(readxl)
library(ggplot2)
library(crayon)
library(survival)
library(openxlsx)
library(RISCA)
load("J:/4-Méthodologiste/Antoine/pancreas/Resultats/RES.RData")
table_LASSO <- read_excel("J:/4-Méthodologiste/Antoine/pancreas/Resultats/table_LASSO.xlsx")
table_resultats <- read_excel("J:/4-Méthodologiste/Antoine/pancreas/Resultats/table_resultats.xlsx")
tmp <- table_resultats$...1
table_resultats <- data.frame(table_resultats[,-1])
row.names(table_resultats) <- tmp
data <- read_excel("J:/4-Méthodologiste/Antoine/pancreas/data.xlsx")
nb_ech_bootstrap = 1000
nb_BDD_completes = 5
TIME <- data.frame(time = sort(unique(data$time)))
HR_tmp <- data.frame(matrix(RES$AU,ncol = 14, byrow = TRUE))
HR_moy <- sapply(HR_tmp, mean)
model_final <- function(X){
model <- X
for(cov in names(X)){
model[,cov] <- X[,cov]*table_resultats[cov,"AVG"]
}
sum.model <- rowSums(model, na.rm = TRUE)
pred.temp <- 0
for(i in 1:(nb_ech_bootstrap*nb_BDD_completes)){
tmp <- exp(matrix(exp(sum.model))%*%t(as.matrix(-1*RES$H0B[,i+1])))
tmp[is.na(tmp)] <- 1
pred.temp <- pred.temp + tmp
}
pred <- pred.temp/(nb_ech_bootstrap*nb_BDD_completes)
table.temp <- data.frame(time = c(0,TIME$time), pred = c(1,pred[1,]))
median <- table.temp[table.temp$pred==max(table.temp[table.temp$pred<=0.5,]$pred),]$time
list(model = sum.model, table = table.temp, median = median)
}
graph <- function(X, median){
if(median == TRUE){
ggplot(model_final(X)$table, aes(x = time, y = pred)) +
geom_step(color ="dodgerblue1" )+
labs(
x = "Survival time (months)",
y = "Progression-free survival") +
geom_segment(aes(x=model_final(X)$median, xend=model_final(X)$median, y=-Inf,  yend= 0.5),  linetype=2) +
geom_segment(aes(x=-Inf, xend=model_final(X)$median, y=0.5, yend=0.5),  linetype=2) +
theme_minimal() +
ylim(c(0,1))
}else{
ggplot(model_final(X)$table,aes(x = time, y = pred)) +
geom_step(color ="dodgerblue1" )+
labs(
x = "Survival time (months)",
y = "Progression-free survival") +
theme_minimal() +
ylim(c(0,1))
}
}
X <- data.frame(Sexe = 1,
Resection.primitif = 1,
Age_L3 = NA,
log_SSP2=log(NA),
Nbre.de.site.metastatique_dg_1=1,
Nbre.de.site.metastatique_dg_2etplu=1)
model_final(X)$table
model_final(X)
model_final(X)$table
model_final(X)$table
yo <- model_final(X)$table
View(yo)
yo
yo
model_final(X)$table$pred
sum(model_final(X)$table$pred)/113
model_final(X)$table$times
model_final(X)$table$time
model_final(X)$table$time*model_final(X)$table$pred
sum(model_final(X)$table$time*model_final(X)$table$pred)
View(yo)
unique(model_final(X)$table$time)
sum(model_final(X)$table$pred)/114
rmst(times = model_final(X)$table$time,
surv.rates = model_final(X)$table$pred,
max.time = max(model_final(X)$table$time),#mois
type = "s")
model_final(X)$table$time
max(model_final(X)$table$time)
summary(KM)$surv
sum(model_final(X)$table$pred)
sum(model_final(X)$table$pred)/114
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
2**64
2**8
2**9
2**9
install.packages("survivalSL")
setwd("C:/Users/472424/Desktop")
.rs.files.restoreBindings()
shiny::runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION')
shiny::runApp()
