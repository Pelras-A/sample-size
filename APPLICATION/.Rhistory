mylist1 <- blockrand(n=200,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "≥ 3 mois et < 1 an")        # libellé de la strate
table(mylist1$treatment) # pour vérifier l'équilibre entre les bras
## Strate n°2 : les femmes
mylist2 <- blockrand(n=200,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "≥ 1 an et < 3 ans")        # libellé de la strate
table(mylist2$treatment) # pour vérifier l'équilibre entre les bras
mylist3 <- blockrand(n=100,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "≥ 3 ans et < 6 ans")        # libellé de la strate
table(mylist3$treatment) # pour vérifier l'équilibre entre les bras
mylist <- rbind(mylist1, mylist2, mylist3) # réunion des listes
##*****************************************************************************#
mylist[mylist$treatment=="C","treatment"] <- "A"
table(mylist$treatment)
myseed ## 776
set.seed(myseed)
##### 2.1. Exemple 1-stratification sur le sexe (Homme/Femme) ******************
## Strate n°1 : les hommes
mylist1 <- blockrand(n=200,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "1")        # libellé de la strate
table(mylist1$treatment) # pour vérifier l'équilibre entre les bras
## Strate n°2 : les femmes
mylist2 <- blockrand(n=200,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "2")        # libellé de la strate
table(mylist2$treatment) # pour vérifier l'équilibre entre les bras
mylist3 <- blockrand(n=100,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "3")        # libellé de la strate
table(mylist3$treatment) # pour vérifier l'équilibre entre les bras
mylist <- rbind(mylist1, mylist2, mylist3) # réunion des listes
##*****************************************************************************#
mylist[mylist$treatment=="C","treatment"] <- "A"
table(mylist$treatment)
write.csv2(mylist,
paste0(pathLISTERANDO,"Liste_randomisation_VISIODYS-PED.csv"))
setwd("J:/4-Méthodologiste/Antoine/Randomisation")
write.csv2(mylist,
paste0("Liste_randomisation_VISIODYS-PED.csv"))
myseed <- floor(runif(n=1, min = 1, max = 10000)) # seed aléatoire
myseed ## 8791
set.seed(myseed)
myseed <- floor(runif(n=1, min = 1, max = 10000)) # seed aléatoire
myseed ## 739
set.seed(myseed)
myseed ## 9187
set.seed(myseed)
##### 2.2. Exemple 2-stratification sur le centre (20 centres) *****************
Npat <- 114 # nombre de patients attendus par strate
for (i in 1:9) {
listrand <- blockrand(n=Npat, num.levels = 2, levels = c("A","B"), block.sizes = c(1,2),
stratum = paste0("Centre",i))
if (i > 1) {
mylist <- rbind(mylist, listrand)
}
else {
mylist <- listrand
}
}
View(mylist)
rm(mylist*)
rm(mylist)
myseed ## 9187
set.seed(myseed)
##### 2.2. Exemple 2-stratification sur le centre (20 centres) *****************
Npat <- 114 # nombre de patients attendus par strate
for (i in 1:9) {
listrand <- blockrand(n=Npat, num.levels = 2, levels = c("A","B"), block.sizes = c(1,2),
stratum = paste0("Centre",i))
if (i > 1) {
mylist <- rbind(mylist, listrand)
}
else {
mylist <- listrand
}
}
#****************
View(mylist)
Npat <- 114 # nombre de patients attendus par strate
for (i in 1:9) {
listrand <- blockrand(n=Npat, num.levels = 2, levels = c("A","B"), block.sizes = c(1,2),
stratum = paste0(i))
if (i > 1) {
mylist <- rbind(mylist, listrand)
}
else {
mylist <- listrand
}
}
myseed ## 9187
set.seed(myseed)
##### 2.2. Exemple 2-stratification sur le centre (20 centres) *****************
Npat <- 114 # nombre de patients attendus par strate
for (i in 1:9) {
listrand <- blockrand(n=Npat, num.levels = 2, levels = c("A","B"), block.sizes = c(1,2),
stratum = paste0(i))
if (i > 1) {
mylist <- rbind(mylist, listrand)
}
else {
mylist <- listrand
}
}
#******************************************************************************#
setwd("J:/4-Méthodologiste/Antoine/Randomisation")
## Enregistrement au format csv :
write.csv2(mylist,
paste0("Liste_randomisation_CRYOSTROKE.csv"))
Npat <- 114 # nombre de patients attendus par strate
for (i in 1:9) {
listrand <- blockrand(n=Npat, num.levels = 2, levels = c("A","B"), block.sizes = c(1,2),
stratum = paste0(i))
if (i > 1) {
mylist <- rbind(mylist, listrand)
}
else {
mylist <- listrand
}
}
#******************************************************
## Enregistrement au format csv :
write.csv2(mylist,
paste0("Liste_randomisation_CRYOSTROKE_draft.csv"))
mylist1 <- blockrand(n=200,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "1")        # libellé de la strate
table(mylist1$treatment) # pour vérifier l'équilibre entre les bras
## Strate n°2 : les femmes
mylist2 <- blockrand(n=200,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "2")        # libellé de la strate
table(mylist2$treatment) # pour vérifier l'équilibre entre les bras
mylist3 <- blockrand(n=100,                    # nombre de patients attendus
num.levels = 2,            # nombre de bras
levels = c("A","B","C"),       # libellé des bras
block.sizes = c(1,2),    # paramétrage des blocs
stratum = "3")        # libellé de la strate
table(mylist3$treatment) # pour vérifier l'équilibre entre les bras
mylist <- rbind(mylist1, mylist2, mylist3) # réunion des listes
##*****************************************************************************#
mylist[mylist$treatment=="C","treatment"] <- "A"
table(mylist$treatment)
## Enregistrement au format csv :
pathLISTERANDO <- "//SRVDATA/PLATEFORME-METHODO-BIOSTATS/4-Méthodologiste/3_Autres/Listes randomisation"
write.csv2(mylist,
paste0("Liste_randomisation_VISIODYS-PED_draft.csv"))
write.csv2(mylist,
paste0("Liste_randomisation_VISIODYS-PED_draft.csv"))
shiny::runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
yoyo=2
if(yoyo==1){
p("coco")
}
if(yoyo==2){
p("ok")
}
else{
p("tt")
}
if(yoyo==1){
p("coco")
}
for(i in 1:5){
if(yoyo==1){
p("coco")
}
if(yoyo==2){
p("ok")
}
else{
p("tt")
}
}
yoyo=2
for(i in 1:5){
if(yoyo==1){
p("coco")
}
if(yoyo==2){
p("ok")
}
else{
p("tt")
}
}
for(i in 1:5){
if(yoyo==1){
print("coco")
}
if(yoyo==2){
print("ok")
}
else{
print("tt")
}
}
yoyo=1
for(i in 1:5){
if(yoyo==1){
print("coco")
}
if(yoyo==2){
print("ok")
}
else{
print("tt")
}
}
for(i in 1:5){
if(yoyo==1){
print("coco")
}
if(yoyo==2){
print("ok")
}
else{
print("tt")
}
}
for(i in 1:5){
if(yoyo==1){
print("coco")
}else{
if(yoyo==2){
print("ok")
}
if{
print("tt")
}
}
}
for(i in 1:5){
if(yoyo==1){
print("coco")
}else{
if(yoyo==2){
print("ok")
}
if{
print("tt")
}
}
}
for(i in 1:5){
if(yoyo==1){
print("coco")
}else{
if(yoyo==2){
print("ok")
}
if{
print("tt")
}
}
}
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
yoyo=1
baba=6
for(i in 1:5){
if(yoyo==1){
if(baba==6){
print("1")
}if(baba!=6){
print("2")
}
}
if(yoyo==2){
if(baba==6){
print("3")
}if(baba!=6){
print("4")
}
}
}
for(i in 1:5){
if(yoyo==1){
if(baba==6){
print("1")
}if(baba!=6){
print("2")
}
}
if(yoyo==2){
if(baba==6){
print("3")
}if(baba!=6){
print("4")
}
}
}
yoyo=1
baba=6
for(i in 1:5){
if(yoyo==1){
if(baba==6){
print("1")
}if(baba!=6){
print("2")
}
}
if(yoyo==2){
if(baba==6){
print("3")
}if(baba!=6){
print("4")
}
}
}
runApp('test')
runApp('test')
runApp('test')
runApp('test')
yoyo=1
baba=6
for(i in 1:5){
if(yoyo==1){
if(baba==6){
print("1")
}else if(baba!=6){
print("2")
}
}else if(yoyo==2){
if(baba==6){
print("3")
}else if(baba!=6){
print("4")
}
}
}
yoyo=2
baba=6
for(i in 1:5){
if(yoyo==1){
if(baba==6){
print("1")
}else if(baba!=6){
print("2")
}
}else if(yoyo==2){
if(baba==6){
print("3")
}else if(baba!=6){
print("4")
}
}
}
yoyo=2
baba=10
for(i in 1:5){
if(yoyo==1){
if(baba==6){
print("1")
}else if(baba!=6){
print("2")
}
}else if(yoyo==2){
if(baba==6){
print("3")
}else if(baba!=6){
print("4")
}
}
}
runApp('test')
187.6/6
31*6
4*6
shiny::runApp('test2')
runApp('test2')
runApp('test2')
runApp()
runApp('test2')
runApp('test')
runApp('test')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
SW
SW <- function(ni, center, sequence, icc){
aa <- -2*center*(sequence - 1/sequence)*icc*(1+sequence/2)
bb <- 3*ni*(1-icc)*icc*(1+sequence) - 2*center*(sequence -1/sequence)*(1-icc)
cc <- 3*ni*(1-icc)*(1-icc)
m1 <- (-bb + sqrt(bb^2 - 4*aa*cc)) / (2*aa)
m2 <- (-bb - sqrt(bb^2 - 4*aa*cc)) / (2*aa)
m_sol <- max(m1,m2)
Npat_center <- m_sol*(sequence+1)
N_tot_SW <- Npat_center*center
2*ceiling(N_tot_SW /2)
}
SW
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
library(shiny); runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
library(shiny); runApp('app_SampleSize.R')
200/6
shiny::runApp('test2')
runApp('test2')
runApp('test2')
runApp('test2')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('app_SampleSize.R')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/app_SampleSize.R')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/app_SampleSize.R')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/app_SampleSize.R')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/app_SampleSize.R')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/app_SampleSize.R')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/app_SampleSize.R')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/app_SampleSize.R')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/app_SampleSize.R')
rclipboardSetup()
library(rclipboard)
install.packages("library(rclipboard)")
install.packages("rclipboard")
library(rclipboard)
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/testbutton')
install.packages("shinyCopy2clipboard")
library(shinyCopy2clipboard)
install.packages("shinyCopy2clipboard")
remotes::install_github("deepanshu88/shinyCopy2clipboard")
remotes::install_github("deepanshu88/shinyCopy2clipboard")
install_github("deepanshu88/shinyCopy2clipboard")
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/testbutton')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/testbutton')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/testbutton')
runApp('J:/4-Méthodologiste/Antoine/GITHUB/sample-size/APPLICATION/testbutton')
